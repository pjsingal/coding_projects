!function(){"use strict";const e=["client/PageHeader.8b4fd32e.js","client/dashboard.7d00d124.js","client/index.effe996e.js","client/bio.d84dcb45.js","client/cv.c620b913.js","client/client.a2fe1c6c.js","client/portfolio.d50afd35.js","client/client.af9daccf.js"].concat(["service-worker-index.html",".directory","AeroFarmLED.jpg","AeroFarmLED.webp","AeroFarmsTigris.jpg","AeroFarmsTigris.webp","AeroponicSys.jpg","AeroponicSys.webp","Automation_and_Circuits.jpeg","Automation_and_Circuits.webp","CAD Model.png","CAD Model.webp","CEA-diagram.png","CEA-diagram.webp","Gears_Icon.png","Gears_Icon.webp","Laptop_Icon.png","Laptop_Icon.webp","PSingalCircle.png","PSingalCircle.webp","QVFT_Hiring.pdf","QVFT_Information.pdf","QVFT_Sponsorship.pdf","QVFT_System_Guide.pdf","TechnicalReport.png","TechnicalReport.webp","ZipGrow.JPG","ZipGrow.webp","background-source.jpg","background-source.webp","background.jpg","background.webp","circuit.png","circuit.webp","diagram.jpg","diagram.webp","fullyAutomated.png","fullyAutomated.webp","global.css","link-display-pic.png","link-display-pic.webp","logo-outline.png","logo-outline.webp","logo-white.png","logo-white.webp","logo-with-name.png","logo-with-name.webp","logo.png","logo.webp","manifest.json","ourTeam.png","ourTeam.webp","portfolio/Patrick.jpg","portfolio/Patrick.webp","premiumProduce.png","premiumProduce.webp","reset.css","social-image.png","social-image.webp"]),t=new Set(e);self.addEventListener("install",t=>{t.waitUntil(caches.open("cache1641664005099").then(t=>t.addAll(e)).then(()=>{self.skipWaiting()}))}),self.addEventListener("activate",e=>{e.waitUntil(caches.keys().then(async e=>{for(const t of e)"cache1641664005099"!==t&&await caches.delete(t);self.clients.claim()}))}),self.addEventListener("fetch",e=>{if("GET"!==e.request.method||e.request.headers.has("range"))return;const o=new URL(e.request.url);o.protocol.startsWith("http")&&(o.hostname===self.location.hostname&&o.port!==self.location.port||(o.host===self.location.host&&t.has(o.pathname)?e.respondWith(caches.match(e.request)):"only-if-cached"!==e.request.cache&&e.respondWith(caches.open("offline1641664005099").then(async t=>{try{const o=await fetch(e.request);return t.put(e.request,o.clone()),o}catch(o){const n=await t.match(e.request);if(n)return n;throw o}}))))})}();
